# ArveVM; follow link for further documentation and appraisals:
# https://github.com/ArveVM/HomeAssistantConfig4/blob/master/avm_yaml/packages/solutions/hastats.md

# First add some customizations:
homeassistant:
  customize:
    package.node_anchors:
      # Add node-anchor for identification of code-location for created sensors
      solution_attribute_to_entity: &solution_attribute
        solution: "HAstats"

    sensor.hastats_yaml_line_total_count:
      state_class: measurement
      <<: *solution_attribute
    sensor.hastats_yaml_line_avm_yaml_count:
      state_class: measurement
      <<: *solution_attribute
    sensor.hastats_yaml_line_dashboard_count:
      state_class: measurement
      <<: *solution_attribute
    sensor.hastats_yaml_line_packages_count:
      state_class: measurement
      <<: *solution_attribute
    sensor.hastats_db_size:
      state_class: measurement
      <<: *solution_attribute

sensor:
  # count number of enabled YAML-lines in my config,,
  # idea nipped from;  https://www.youtube.com/watch?v=OFky6pYj1KE
  - name: "HAstats YAML line TOTAL count"
    unique_id: hastats_yaml_line_total_count
    platform: command_line
    command: " find /config/ -name '*.yaml' | xargs cat | wc -l"
    unit_of_measurement: "lines"
  - name: "HAstats YAML line AVM_yaml count"
    unique_id: hastats_yaml_line_avm_yaml_count
    platform: command_line
    command: " find /config/avm_yaml -name '*.yaml' | xargs cat | wc -l"
    unit_of_measurement: "lines"
  - name: "HAstats YAML line Dashboard count"
    unique_id: hastats_yaml_line_dashboard_count
    platform: command_line
    command: " find /config/avm_yaml/dashboard -name '*.yaml' | xargs cat | wc -l"
    unit_of_measurement: "lines"
  - name: "HAstats YAML-line Packages count"
    unique_id: hastats_yaml_line_packages_count
    platform: command_line
    command: " find /config/avm_yaml/packages -name '*.yaml' | xargs cat | wc -l"
    unit_of_measurement: "lines"

  - platform: sql
    scan_interval: 30000
    queries:
      - name: "HAstats DB size"
        # source: Moonbase59 -  https://community.home-assistant.io/t/calculate-home-assistant-v2-db-size-without-whitelisting-entire-config-dir/195808/2
        query: "SELECT ROUND(page_count * page_size / 1024 / 1024, 1) as size FROM pragma_page_count(), pragma_page_size();"
        column: "size"
        unit_of_measurement: "MiB"

template: 
  #  EbD = Enteties by Domain  :)
  - sensor:
      # some groups to get right level reporting:
      - unique_id: hastats_ebd_sum_sensors
        name: HAstats EbD sum sensors
        state_class: measurement
        state: >
          {{ states('sensor.hastats_ebd_sensors') | float(default=0)
          + states('sensor.hastats_ebd_binary_sensors') | float(default=0)
          }}
        icon: mdi:case-sensitive-alt
        attributes:
          <<: *solution_attribute
      - unique_id: hastats_ebd_sum_inputs2
        name: HAstats EbD sum inputs
        state_class: measurement
        state: >
          {{ states('sensor.hastats_ebd_input_booleans') | float(default=0)
          + states('sensor.hastats_ebd_input_datetimes') | float(default=0)
          + states('sensor.hastats_ebd_input_numbers') | float(default=0)
          + states('sensor.hastats_ebd_input_selects') | float(default=0)
          + states('sensor.hastats_ebd_input_texts') | float(default=0)
          }}
        icon: mdi:numeric-0
        attributes:
          <<: *solution_attribute

      # then total and checksum:
      - name: HAstats EbD total
        unique_id: hastats_ebd_total
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{'' ~ states | count }}"
        icon: mdi:sigma
      # Checksum to be able to verify of total = sum of defined domains ("are there new domains added?")
      - name: HAstats EbD total checksum
        unique_id: hastats_ebd_total_checksum
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: >-
          {{states('sensor.hastats_ebd_total') | float(default=0)
          - states('sensor.hastats_ebd_alerts') | float(default=0)
          - states('sensor.hastats_ebd_automations') | float(default=0)
          - states('sensor.hastats_ebd_binary_sensors') | float(default=0)
          - states('sensor.hastats_ebd_buttons') | float(default=0)
          - states('sensor.hastats_ebd_calendars') | float(default=0)
          - states('sensor.hastats_ebd_cameras') | float(default=0)
          - states('sensor.hastats_ebd_climates') | float(default=0)
          - states('sensor.hastats_ebd_counters') | float(default=0)
          - states('sensor.hastats_ebd_covers') | float(default=0) 
          - states('sensor.hastats_ebd_device_trackers') | float(default=0)
          - states('sensor.hastats_ebd_groups') | float(default=0)
          - states('sensor.hastats_ebd_input_booleans') | float(default=0)
          - states('sensor.hastats_ebd_input_datetimes') | float(default=0)
          - states('sensor.hastats_ebd_input_numbers') | float(default=0)
          - states('sensor.hastats_ebd_input_selects') | float(default=0)
          - states('sensor.hastats_ebd_input_texts') | float(default=0)
          - states('sensor.hastats_ebd_lights') | float(default=0)
          - states('sensor.hastats_ebd_media_players') | float(default=0)
          - states('sensor.hastats_ebd_numbers') | float(default=0)
          - states('sensor.hastats_ebd_persistent_notifications') | float(default=0)
          - states('sensor.hastats_ebd_openplantbooks') | float(default=0)
          - states('sensor.hastats_ebd_persons') | float(default=0)
          - states('sensor.hastats_ebd_plants') | float(default=0)
          - states('sensor.hastats_ebd_remotes') | float(default=0)
          - states('sensor.hastats_ebd_scenes') | float(default=0)
          - states('sensor.hastats_ebd_scripts') | float(default=0)
          - states('sensor.hastats_ebd_selects') | float(default=0)
          - states('sensor.hastats_ebd_sensors') | float(default=0)
          - states('sensor.hastats_ebd_sun') | float(default=0)
          - states('sensor.hastats_ebd_switches') | float(default=0)
          - states('sensor.hastats_ebd_timers') | float(default=0)
          - states('sensor.hastats_ebd_updates') | float(default=0)
          - states('sensor.hastats_ebd_weathers') | float(default=0)
          - states('sensor.hastats_ebd_zones') | float(default=0)
          - states('sensor.hastats_ebd_zwaves') | float(default=0)
          }}

      # then counters for each of the the actual domains:
      - name: HAstats EbD alerts
        unique_id: hastats_ebd_alerts
        state_class: measurement
        attributes:
          <<: *solution_attribute
        icon: mdi:play
        state: "{{states.alert | count}}"
      - name: HAstats EbD automations
        unique_id: hastats_ebd_automations
        state_class: measurement
        attributes:
          <<: *solution_attribute
        icon: mdi:play
        state: "{{states.automation | count}}"
      - name: HAstats EbD binary sensors
        unique_id: hastats_ebd_binary_sensors
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.binary_sensor | count}}"
      - name: HAstats EbD buttons
        unique_id: hastats_ebd_buttons
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.button | count}}"
      - name: HAstats EbD calendar
        unique_id: hastats_ebd_calendars
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.calendar | count}}"
      - name: HAstats EbD cameras
        unique_id: hastats_ebd_cameras
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.camera | count}}"
      - name: HAstats EbD climates
        unique_id: hastats_ebd_climates
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.climate | count}}"
      - name: HAstats EbD counters
        unique_id: hastats_ebd_counters
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.counter | count}}"
      - name: HAstats EbD Covers
        unique_id: hastats_ebd_covers
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.cover | count}}"
      - name: HAstats EbD device trackers
        unique_id: hastats_ebd_device_trackers
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.device_tracker | count}}"
      - name: HAstats EbD Groups
        unique_id: hastats_ebd_groups
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.group | count}}"
      - name: HAstats EbD input booleans
        unique_id: hastats_ebd_input_booleans
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.input_boolean | count}}"
      - name: HAstats EbD input datetimes
        unique_id: hastats_ebd_input_datetimes
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.input_datetime | count}}"
      - name: HAstats EbD input numbers
        unique_id: hastats_ebd_input_numbers
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.input_number | count}}"
      - name: HAstats EbD input selects
        unique_id: hastats_ebd_input_selects
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.input_select | count}}"
      - name: HAstats EbD input texts
        unique_id: hastats_ebd_input_texts
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.input_text | count}}"
      - name: HAstats EbD lights
        unique_id: hastats_ebd_lights
        state_class: measurement
        icon: mdi:lightbulb
        attributes:
          <<: *solution_attribute
        state: "{{states.light | count}}"
      - name: HAstats EbD media players
        unique_id: hastats_ebd_media_players
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.media_player | count}}"
      - name: HAstats EbD numbers
        unique_id: hastats_ebd_numbers
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.number | count}}"
      - name: HAstats EbD persistent notifications
        unique_id: hastats_ebd_persistent_notifications
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.persistent_notification | count}}"
      - name: HAstats EbD openplantbooks
        unique_id: hastats_ebd_openplantbooks
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.openplantbook | count}}"
      - name: HAstats EbD persons
        unique_id: hastats_ebd_persons
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.person | count}}"
      - name: HAstats EbD plants
        unique_id: hastats_ebd_plants
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.plant | count}}"
      - name: HAstats EbD remotes
        unique_id: hastats_ebd_remotes
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.remote | count}}"
      - name: HAstats EbD scenes
        unique_id: hastats_ebd_scenes
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.scene | count}}"
      - name: HAstats EbD scripts
        unique_id: hastats_ebd_scripts
        icon: mdi:script
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.script | count}}"
      - name: HAstats EbD selects
        unique_id: hastats_ebd_selects
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.select | count}}"
      - name: HAstats EbD sensors
        unique_id: hastats_ebd_sensors
        state_class: measurement
        icon: mdi:case-sensitive-alt
        attributes:
          <<: *solution_attribute
        state: "{{states.sensor | count}}"
      - name: HAstats EbD sun
        unique_id: hastats_ebd_sun
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.sun | count}}"
      - name: HAstats EbD switches
        unique_id: hastats_ebd_switches
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.switch | count}}"
      - name: HAstats EbD timers
        unique_id: hastats_ebd_timers
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.timer | count}}"
      - name: HAstats EbD updates
        unique_id: hastats_ebd_updates
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.update | count}}"
      - name: HAstats EbD weathers
        unique_id: hastats_ebd_weathers
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.weather | count}}"
      - name: HAstats EbD zones
        unique_id: hastats_ebd_zones
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.zone | count}}"
      - name: HAstats EbD zwaves
        unique_id: hastats_ebd_zwaves
        state_class: measurement
        attributes:
          <<: *solution_attribute
        state: "{{states.zwave | count}}"
